@using Microsoft.AspNetCore.Identity
@inject UserManager<Uzytkownik> UserManager

@{
    ViewData["Title"] = "Zarządzanie restauracją";
}

@if (TempData["ErrorMessage"] != null)
{
    <div class="alert alert-warning alert-dismissible fade show text-center" role="alert">
        <strong>@TempData["ErrorMessage"]</strong>
        <button type="button" class="btn-close" data-bs-dismiss="alert" aria-label="Close"></button>
    </div>
}
@if (TempData["SuccessMessage"] != null)
{
    <div class="alert alert-success alert-dismissible fade show text-center" role="alert">
        <strong>@TempData["SuccessMessage"]</strong>
        <button type="button" class="btn-close" data-bs-dismiss="alert" aria-label="Close"></button>
    </div>
}

@{
    var id = UserManager.GetUserId(User);
}
@if (User.Identity.IsAuthenticated && UserManager.FindByIdAsync(id).Result.AccessLevel == 1)
{
    <div class="container mt-4">
        <h2 class="text-center mb-4">Zarządzanie restauracją</h2>

        <div class="d-flex justify-content-center gap-3">
            <a asp-controller="Product" asp-action="Add" class="btn btn-success btn-lg shadow-sm">
                <i class="bi bi-plus-lg"></i> Dodaj produkt
            </a>
            <a asp-action="ShowAllOrders" class="btn btn-primary btn-lg shadow-sm">
                <i class="bi bi-list"></i> Zarządzanie zamówieniami
            </a>
            <a asp-action="ShowUsers" class="btn btn-primary btn-lg shadow-sm">
                <i class="bi bi-list"></i> Zarządzanie użytkownikami
            </a>
        </div>
    </div>
}
else
{
    <h1>Brak Dostępu</h1>
}